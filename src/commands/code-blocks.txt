let user;
	let gargs = args[0];
	if (args.length < 1) { // get the user who is using the command if no arguments are provided
		user = msg.guild.members.get(`${msg.member.id}`);
	} else if (gargs.includes("<@") && gargs.includes(">") && !gargs.includes("<@&")) { // get pinged user
		let r;
		if (gargs.includes("<@!")) {
			r = gargs.replace(/<@!/g, '');
		} else if (gargs.includes("<@") && !gargs.includes("<@!")) {
			r = gargs.replace(/<@/g, '');
		}
		let rone = r.replace(/>/g, '');
		if (msg.guild.members.get(`${rone}`)) { // in current guild
			user = msg.guild.members.get(`${rone}`);
		} else if (!msg.guild.members.get(`${rone}`)) { // not in current guild
			user = bot.users.find(`id`, `${rone}`);
		}
	} else if (bot.users.find(`id`, `${args[0]}`)) { // get user by ID
		if (msg.guild.members.get(`${args[0]}`)) {
			user = msg.guild.members.get(`${args[0]}`);
		} else if (!msg.guild.members.get(`${args[0]}`)) {
			user = bot.users.find(`id`, `${args[0]}`);
		} 
	} else if (bot.users.find(`username`, `${args[0]}`)) { // get user by username
		let gusername = bot.users.find(`username`, `${args[0]}`);
		if (msg.guild.members.get(`${gusername.id}`)) {
			user = msg.guild.members.get(`${gusername.id}`);
		} else if (!msg.guild.members.get(`${gusername.id}`)) {
			user = bot.users.find(`id`, `${gusername.id}`);
		}
	} else if (bot.users.find(`discriminator`, `${args[0]}`)) { // get user by discriminator
		let gdiscrim = bot.users.find(`discriminator`, `${args[0]}`);
		if (msg.guild.members.get(`${gdiscrim.id}`)) {
			user = msg.guild.members.get(`${gdiscrim.id}`);
		} else if (!msg.guild.members.get(`${gdiscrim.id}`)) {
			user = bot.users.find(`id`, `${gdiscrim.id}`);
		}
	}











// get users notes
, {
				name: 'User Notes',
				value: ((user.note === null || user.note === '') ? 'None' : user.note)
			}
			
			
			
			
// get users top role name
let rol = msg.member.roles.filter(m => m.name).map(m => m.position).sort(function(a, b){return b-a});
let rolone = msg.member.roles.filter(m => m.position === rol[0]).map(m => m.name); rolone
